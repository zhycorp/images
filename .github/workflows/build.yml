name: Build Dockerfile and publish it to registry

on:
  workflow_call:
    inputs:
      root_directory:
        description: Root directory of working (Passed to docker build context path)
        required: true
        type: string
      work_directory:
        description: Working directory of Dockerfile
        required: true
        type: string
      image_name:
        description: Docker image name
        required: true
        type: string

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Set up Node.js for extracting recipe from Dockerfile
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2

      - name: Set WORKDIR
        run: |
          echo "WORKDIR=${{ inputs.work_directory }}" >> $GITHUB_ENV
          echo "ROOTDIR=${{ inputs.root_directory }}" >> $GITHUB_ENV

      - name: Extract recipe from Dockerfile
        id: recipe
        run: |
          TAGS=`npm exec -sy @hazmi35/extract-docker-baseimg-recipe $WORKDIR/Dockerfile tags`
          PLATFORMS=`npm exec -sy @hazmi35/extract-docker-baseimg-recipe $WORKDIR/Dockerfile platforms`
          VARIANT=`npm exec -sy @hazmi35/extract-docker-baseimg-recipe $WORKDIR/Dockerfile variant`
          echo TAGS: $TAGS
          echo PLATFORMS: $PLATFORMS
          echo VARIANT: $VARIANT
          echo "::set-output name=tags::${TAGS//$', '/'%0A'}"
          echo "::set-output name=platforms::${PLATFORMS//$', '/'%0A'}"
          echo "::set-output name=variant::$VARIANT"
      - name: Generate Docker image metadata
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        id: meta
        with:
          images: |
            ghcr.io/frutbits/${{ inputs.image_name }}
          tags: |
            ${{ steps.recipe.outputs.tags }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image from the specified Dockerfile
        id: docker_build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3.3.1
        with:
          context: ${{ env.ROOTDIR }}
          file: ${{ env.WORKDIR }}/Dockerfile
          platforms: |
            ${{ steps.recipe.outputs.platforms }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}